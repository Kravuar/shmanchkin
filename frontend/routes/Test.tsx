import tw from 'twin.macro'
import React, {ReactNode, useState} from "react";
import {css} from "@emotion/react";
import {ShoppingBagIcon, XMarkIcon} from "@heroicons/react/24/outline";
import styled from "@emotion/styled";
import {nanoid} from "nanoid";

const cards = Object.entries(import.meta.glob('/frontend/assets/cards/*.png', {eager: true})).map(([key, value]) => {
    return {
        id: nanoid(),
        name: key,
        image: value.default
    }
})

export const Test = () => {
    console.log(cards)
    const playerBlockInfo = {
        name: 'Никнейм',
        race: 'Тут название',
        'class': 'Тут название',
        pocketCount: 25,
        cardsCount: 15
    }
    return (
        <div tw={'text-white bg-stone-800 w-full min-h-screen pt-[50px] flex place-items-center'}>
            <div tw={'relative m-auto w-[1280px] h-[738px] overflow-hidden border-4 border-stone-900'}>
                <div className={'flex gap-2.5'}>
                    <PlayerBlock playerBlockInfo={playerBlockInfo}/>
                    <PlayerBlock playerBlockInfo={playerBlockInfo}/>
                    <PlayerBlock playerBlockInfo={playerBlockInfo}/>
                </div>
                <div className={'absolute bottom-[-50px] flex'}>
                    {
                        cards.map(card => {
                            return (
                                <FloatingUp tw={'shrink-0 first:ml-0 ml-[-30px]'}>
                                    {
                                        (floated, unFloat) => (
                                            <div className={'relative'}>
                                                <img draggable={"false"} tw={'rounded-2xl select-none'} width={132}
                                                     height={207}
                                                     src={card.image}/>
                                                <div css={[
                                                    tw`absolute left-full top-0 transition-opacity `,
                                                    floated ? tw`opacity-100 duration-500` : tw`opacity-0 duration-300`
                                                ]}>
                                                    <button onClick={() => unFloat()}>
                                                        <XMarkIcon className={'w-6 h-6'}/>
                                                    </button>
                                                    <button>
                                                        <svg width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                            <g clipPath="url(#clip0_229_29)">
                                                                <path d="M7.6481 35.6683L12.8596 30.4568L9.47543 27.0726L4.26398 32.2842L3.11336 31.1335C2.84266 30.8628 2.43656 30.8628 2.16578 31.1335L0.609154 32.6903C0.338453 32.961 0.338453 33.367 0.609154 33.6378L6.36209 39.3908C6.63279 39.6615 7.03888 39.6615 7.30966 39.3908L8.86637 37.8341C9.13707 37.5634 9.13707 37.0895 8.73098 36.7512L7.6481 35.6683Z" fill="#FFD0A1"/>
                                                                <path d="M13.8748 26.0574L16.2437 28.4263L19.9662 24.7039L17.5974 22.335L13.8748 26.0574L17.5973 22.335L15.2285 19.9661L11.506 23.6886L13.8748 26.0574ZM39.5939 0.338379L38.2403 6.42975L24.704 19.9661L22.3351 17.5973L39.5939 0.338379ZM39.5939 0.338379L22.3351 17.5973L19.9662 15.2284L33.5026 1.69196L39.5939 0.338379Z" fill="#ECF4F7"/>
                                                                <path d="M28.4264 23.6886L26.0575 26.0575L0.33844 0.338379L6.42981 1.69204L19.9661 15.2284L22.335 17.5973L24.7039 19.9662L28.4264 23.6886ZM26.0575 26.0574L23.6887 28.4263L19.9662 24.7039L17.5973 22.335L15.2284 19.9661L1.69202 6.42975L0.33844 0.338379L26.0575 26.0574Z" fill="#ECF4F7"/>
                                                                <path d="M16.2437 28.4264L18.6126 30.7953C16.8528 32.555 15.0254 32.6227 13.198 30.7953L12.8596 30.4568L9.47543 27.0727L9.13699 26.7343C7.37724 24.9745 7.30958 23.1471 9.13699 21.3197L11.5059 23.6886L13.8748 26.0575L16.2437 28.4264ZM28.4264 23.6887L30.7953 21.3198C32.6227 23.0795 32.6227 24.9069 30.7953 26.7344L30.4569 27.0727L27.0728 30.4568L26.7343 30.7953C24.9746 32.555 23.1471 32.6227 21.3197 30.7953L23.6886 28.4264L26.0575 26.0575L28.4264 23.6887Z" fill="#AE938D"/>
                                                                <path d="M32.3519 35.6683L35.6683 32.3519L30.4569 27.1404L27.0728 30.5245L32.3519 35.6683L31.1337 36.8866C30.863 37.1573 30.863 37.5634 31.1337 37.8341L32.6904 39.3909C32.9611 39.6616 33.3672 39.6616 33.6379 39.3909L39.3909 33.6379C39.6616 33.3672 39.6616 32.9611 39.3909 32.6903L37.8342 31.1336C37.5635 30.8629 37.0896 30.8629 36.7513 31.269L35.7361 32.2843C35.6684 32.2842 32.3519 35.6683 32.3519 35.6683Z" fill="#FFD0A1"/>
                                                                <path d="M33.1641 39.9323C32.8934 39.9323 32.6226 39.7969 32.4196 39.6616L30.8629 38.1049C30.4568 37.6988 30.4568 37.0897 30.8629 36.6836L31.8104 35.736L27.0727 30.9983L27.0051 31.066C25.11 32.961 23.0118 32.961 21.1167 31.066C20.9814 30.9306 20.9814 30.7275 21.1167 30.5922L30.5922 21.1167C30.7276 20.9813 30.9307 20.9813 31.066 21.1167C32.0136 22.0643 32.4873 23.0795 32.4873 24.027C32.4873 25.0422 32.0136 25.9898 31.066 27.005L30.9983 27.0727L35.736 31.8104L36.5482 30.9982C37.0897 30.4567 37.7665 30.4567 38.1726 30.8628L39.7293 32.4195C39.9323 32.6226 40 32.8933 40 33.1641C40 33.4348 39.8646 33.7056 39.7293 33.9086L33.9764 39.6615C33.7056 39.7969 33.4349 39.9323 33.1641 39.9323ZM27.5466 30.4568L32.555 35.4653C32.6904 35.6007 32.6904 35.8037 32.555 35.9391L31.4044 37.0897C31.269 37.2251 31.269 37.4281 31.4044 37.5634L32.9611 39.1201C33.0965 39.2555 33.2996 39.2555 33.4349 39.1201L39.1878 33.3672C39.2555 33.2995 39.2555 33.2318 39.2555 33.0965C39.2555 32.9612 39.1878 32.8935 39.1878 32.8258L37.6311 31.2691C37.4957 31.1337 37.225 31.2014 37.022 31.4045L36.0067 32.4197L34.45 33.9764C34.3146 34.1118 34.1116 34.1118 33.9763 33.9764C33.8409 33.841 33.8409 33.638 33.9763 33.5027L35.2622 32.2167L30.2538 27.2081C30.1184 27.0727 30.1184 26.8697 30.2538 26.7343L30.5922 26.3959C31.4044 25.5837 31.8782 24.7039 31.8782 23.8917C31.8782 23.1472 31.5397 22.4027 30.8629 21.6582L21.8613 30.6599C22.6058 31.3367 23.3503 31.6751 24.0948 31.6751C24.907 31.6751 25.7191 31.269 26.5313 30.4568L28.5618 28.4264C28.6972 28.291 28.9002 28.291 29.0355 28.4264C29.1709 28.5618 29.1709 28.7648 29.0355 28.9001L27.5466 30.4568ZM6.76816 39.9323C6.49746 39.9323 6.22668 39.7969 6.02364 39.6616L0.270701 33.9086C0.0676555 33.7056 0 33.4349 0 33.1641C0 32.8933 0.13539 32.6226 0.270701 32.4195L1.82741 30.8629C2.2335 30.4568 2.84264 30.4568 3.24873 30.8629L4.1963 31.8105L8.93401 27.0728L8.86635 27.0051C6.97129 25.1101 6.97129 23.0119 8.86635 21.1168C9.00174 20.9814 9.20479 20.9814 9.3401 21.1168L18.8156 30.5923C18.8832 30.66 18.8832 30.7277 18.8832 30.863C18.8832 30.9983 18.8156 31.066 18.8156 31.1337C16.9205 33.0288 14.8223 33.0288 12.9273 31.1337L12.8596 31.066L8.12183 35.8037L8.93401 36.6159C9.47549 37.1573 9.47549 37.8341 9.0694 38.2402L7.51269 39.7969C7.30964 39.7969 7.03894 39.9323 6.76816 39.9323ZM2.57194 31.269C2.50428 31.269 2.36889 31.269 2.36889 31.3367L0.812183 32.8934C0.744527 32.961 0.744527 33.0288 0.744527 33.1641C0.744527 33.2994 0.812183 33.3671 0.812183 33.4348L6.56512 39.1877C6.70051 39.3231 6.90355 39.3231 7.03886 39.1877L8.59557 37.631C8.73096 37.4956 8.66323 37.2249 8.46018 37.0219L7.44495 36.0066L5.88832 34.4501C5.75293 34.3147 5.75293 34.1116 5.88832 33.9763C6.02371 33.8409 6.22676 33.8409 6.36207 33.9763L7.648 35.2623L12.6565 30.2538C12.7919 30.1184 12.9949 30.1184 13.1302 30.2538L13.4687 30.5922C15.093 32.2166 16.582 32.2842 18.1387 30.7953L9.13706 21.7936C7.71574 23.3503 7.78339 24.9069 9.3401 26.4636L11.3706 28.4941C11.5059 28.6295 11.5059 28.8325 11.3706 28.9678C11.2352 29.1032 11.0321 29.1032 10.8968 28.9678L9.47549 27.4789L4.467 32.4873C4.33161 32.6227 4.12857 32.6227 3.99326 32.4873L2.84264 31.3367C2.77498 31.269 2.70725 31.269 2.57194 31.269ZM17.9357 27.0727C17.868 27.0727 17.7326 27.0727 17.665 27.005C17.5296 26.8697 17.5296 26.6666 17.665 26.5313L19.4247 24.7715L17.5297 22.8765L15.7699 24.6362C15.6345 24.7716 15.4315 24.7716 15.2962 24.6362C15.1608 24.5008 15.1608 24.2978 15.2962 24.1625L17.0559 22.4027L15.1608 20.5077L13.4011 22.2674C13.2657 22.4028 13.0627 22.4028 12.9273 22.2674C12.792 22.132 12.792 21.929 12.9273 21.7937L14.6871 20.0339L1.42132 6.76814C1.35366 6.70048 1.35366 6.63274 1.35366 6.63274L0 0.541374V0.473718C0 0.473718 0 0.473718 0 0.406063C0 0.338407 0.0676555 0.270673 0.0676555 0.203017C0.135311 0.135362 0.203046 0.135362 0.270701 0.135362H0.338357L6.42973 1.48903C6.49738 1.48903 6.56512 1.55668 6.56512 1.55668L26.8697 21.8613C27.0051 21.9966 27.0051 22.1997 26.8697 22.335C26.7343 22.4704 26.5312 22.4704 26.3959 22.335L6.15903 2.09808L1.28593 1.0152L24.5008 24.2301C24.6362 24.3655 24.6362 24.5685 24.5008 24.7038C24.3654 24.8392 24.1624 24.8392 24.027 24.7038L0.812183 1.48895L1.89507 6.36204L15.3637 19.8307L17.7326 22.1996L20.1015 24.5685L22.132 26.599C22.2674 26.7343 22.2674 26.9374 22.132 27.0727C21.9966 27.2081 21.7935 27.2081 21.6582 27.0727L19.8985 25.3129L18.1387 27.0727C18.1387 27.0727 18.0034 27.0727 17.9357 27.0727ZM26.7344 18.2741C26.6667 18.2741 26.5313 18.2741 26.4637 18.2064C26.3283 18.071 26.3283 17.868 26.4637 17.7327L37.9019 6.29439L38.9848 1.42129L24.5685 15.8375C24.4331 15.9729 24.2301 15.9729 24.0948 15.8375C23.9595 15.7021 23.9594 15.4991 24.0948 15.3638L38.511 0.947544L33.6379 2.03043L22.1996 13.4686C22.0642 13.604 21.8612 13.604 21.7259 13.4686C21.5906 13.3333 21.5905 13.1302 21.7259 12.9949L33.2318 1.48895C33.2995 1.42129 33.3672 1.42129 33.3672 1.42129L39.4586 0.067627H39.5262C39.5262 0.067627 39.5263 0.067627 39.5939 0.067627C39.6616 0.067627 39.7293 0.135282 39.797 0.135282C39.8646 0.202938 39.8646 0.270673 39.8646 0.338328C39.8646 0.338328 39.8646 0.338328 39.8646 0.405984V0.473639L38.5109 6.56501C38.5109 6.63267 38.4433 6.7004 38.4433 6.7004L26.9374 18.2063C26.9374 18.2741 26.802 18.2741 26.7344 18.2741Z" fill="#51565F"/>
                                                            </g>
                                                            <defs>
                                                                <clipPath id="clip0_229_29">
                                                                    <rect width="40" height="40" fill="white"/>
                                                                </clipPath>
                                                            </defs>
                                                        </svg>
                                                    </button>
                                                </div>
                                            </div>
                                        )
                                    }
                                </FloatingUp>
                            )
                        })
                    }
                </div>
            </div>
        </div>
    )
}

interface FloatingUpProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'children'> {
    children: (floated: boolean, unFloat: () => void) => ReactNode
}

const FloatingUp = ({children, ...props}: FloatingUpProps) => {
    const [floated, setFloated] = useState(false)
    return (
        <div css={[
            tw`transition-transform `,
            floated ? tw`scale-150 translate-y-[-270px]` : tw`scale-100 translate-y-0`,
        ]} onClick={() => !floated && setFloated(true)} {...props}>
            {children(floated, () => setFloated(false))}
        </div>
    )
}


const CardImage = styled.img(() => [css`
  width: 20px;
  height: 32px;
  border-radius: 10%
`])

const PlayerBlock = ({playerBlockInfo}) => (
    <div className={'flex flex-col bg-stone-900 rounded-lg w-[152px] p-2.5'}>
        <div className={'grow flex flex-col'}>
            <div className={'text-sm font-bold'}>
                {playerBlockInfo.name}
            </div>
            <div className={'mt-1 text-sm'}>
                Расса: {playerBlockInfo.race}
            </div>
            <div className={'text-sm'}>
                Класс: {playerBlockInfo['class']}
            </div>
        </div>
        <div className={'mt-1.5 flex justify-between items-center'}>
            <PocketCounter>{playerBlockInfo.pocketCount}</PocketCounter>
            <CardsCounter>{playerBlockInfo.cardsCount}</CardsCounter>
        </div>
        <div className={'mt-1 grid grid-cols-6 gap-x-0.5'}>
            {
                Array.from({length: 6}, (_, k) => (
                    <CardImage src={cards[1].image} key={k}/>
                ))
            }
        </div>
        <div className={'mt-1 grid grid-cols-6 gap-x-0.5'}>
            {
                Array.from({length: 6}, (_, k) => (
                    <CardImage src={cards[1].image} key={k} css={[
                        css`box-shadow: 0px 0px 10px 5px rgba(0, 0, 0, 0.25) inset, 0px 0px 3px 0px #84CC16;`
                    ]}/>
                ))
            }
        </div>
    </div>
)

const CardsCounter = ({className, ...props}: React.HTMLAttributes<HTMLDivElement>) => (
    <span className={'relative w-[38px] h-[33px]'}>
        <CardsIcon className={'w-[38px] h-[33px]'}/>
        <div css={[
            tw`absolute inset-0 w-[38px] h-[33px] font-bold text-lg flex items-center justify-center`,
            css`-webkit-text-stroke: 1.2px #000000;`,
            className
        ]} {...props}/>
    </span>
)
const PocketCounter = ({className, ...props}: React.HTMLAttributes<HTMLDivElement>) => (
    <div className={'relative w-[33px] h-[33px]'}>
        <ShoppingBagIcon className={'w-[33px] h-[33px]'}/>
        <div css={[
            tw`absolute inset-0 text-xs font-bold w-[33px] h-[33px] flex items-end justify-center pb-1`,
            className
        ]} {...props}/>
    </div>
)
const CardsIcon = ({...props}: React.SVGProps<SVGSVGElement>) => (
    <svg width="38" height="33" viewBox="0 0 38 33" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}>
        <rect x="0.455483" y="0.540913" width="17.4868" height="28.0079" rx="2.5"
              transform="matrix(0.99634 0.0854772 -0.085375 0.996349 19.6287 2.47891)" fill="#431407" stroke="#1C1917"/>
        <rect x="0.483152" y="0.516317" width="17.4868" height="28.0081" rx="2.5"
              transform="matrix(0.999449 0.0331843 -0.0331444 0.999451 16.7189 2.75891)" fill="#431407"
              stroke="#1C1917"/>
        <rect x="0.509495" y="0.490309" width="17.4868" height="28.0081" rx="2.5"
              transform="matrix(0.999816 -0.0191974 0.0191743 0.999816 13.8369 3.08385)" fill="#431407"
              stroke="#1C1917"/>
        <rect x="0.534442" y="0.462957" width="17.4868" height="28.008" rx="2.5"
              transform="matrix(0.997438 -0.0715311 0.0714455 0.997445 10.9852 3.45189)" fill="#431407"
              stroke="#1C1917"/>
        <rect x="0.557922" y="0.434338" width="17.4869" height="28.0078" rx="2.5"
              transform="matrix(0.992324 -0.123666 0.123519 0.992342 8.16639 3.86126)" fill="#FCD34D" stroke="#1C1917"/>
        <rect x="0.579871" y="0.404531" width="17.4871" height="28.0075" rx="2.5"
              transform="matrix(0.984487 -0.17546 0.175255 0.984523 5.38274 4.30967)" fill="#FCD34D" stroke="#1C1917"/>
        <rect x="0.60023" y="0.373618" width="17.4873" height="28.0072" rx="2.5"
              transform="matrix(0.973948 -0.226772 0.226513 0.974008 2.63651 4.795)" fill="#FCD34D" stroke="#1C1917"/>
        <rect x="0.618944" y="0.341683" width="17.4876" height="28.0067" rx="2.5"
              transform="matrix(0.960737 -0.27746 0.277152 0.960826 -0.0703965 5.31463)" fill="#FCD34D"
              stroke="#1C1917"/>
    </svg>
)